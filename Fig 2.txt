rm(list = ls())
.libPaths("E:/R/library")
library(Seurat)
library(dplyr)
library(patchwork)
library(ggplot2)
wd <- getwd()
wd
#1-T 
if(TRUE){
swd <- paste(wd,'/1-T/filtered_feature_bc_matrix',sep = '')
swd
##读取数据(注意要所有文件为以下命名：’barcodes.tsv.gz','genes.tsv.gz','matrix.mtx.gz')   
T1 <- Read10X(data.dir = swd)
T1 <- CreateSeuratObject(counts = T1, project = '1-T', min.cells = 3, min.features = 200)  
}
#2-T 
if(TRUE){
  swd <- paste(wd,'/2-T/filtered_feature_bc_matrix',sep = '')
  swd
  T2 <- Read10X(data.dir = swd)
  T2 <- CreateSeuratObject(counts = T2, project = '2-T', min.cells = 3, min.features = 200)  
}
#3-T 
if(TRUE){
  swd <- paste(wd,'/3-T/filtered_feature_bc_matrix',sep = '')
  swd
  T3 <- Read10X(data.dir = swd)
  T3 <- CreateSeuratObject(counts = T3, project = '3-T', min.cells = 3, min.features = 200)  
}
#4-T 
if(TRUE){
  swd <- paste(wd,'/4-T/filtered_feature_bc_matrix',sep = '')
  swd
  T4 <- Read10X(data.dir = swd)
  T4 <- CreateSeuratObject(counts = T4, project = '4-T', min.cells = 3, min.features = 200)  
}
#5-T 
if(TRUE){
  swd <- paste(wd,'/5-T/filtered_feature_bc_matrix',sep = '')
  swd
  T5 <- Read10X(data.dir = swd)
  T5 <- CreateSeuratObject(counts = T5, project = '5-T', min.cells = 3, min.features = 200)  
}
#6-T DC导入
if(TRUE){
  swd <- paste(wd,'/6-T/filtered_feature_bc_matrix',sep = '')
  swd
  T6 <- Read10X(data.dir = swd)
  T6 <- CreateSeuratObject(counts = T6, project = '6-T', min.cells = 3, min.features = 200)  
}

T1 <- merge(T1,T2)
T1 <- merge(T1,T3)
T1 <- merge(T1,T4)
T1 <- merge(T1,T5)
T1 <- merge(T1,T6)
Tumor <- T1
rm(T2)
rm(T3)
rm(T1)
rm(T4)
rm(T5)
rm(T6)

seurat_object<- Tumor
rm(Tumor)
setwd(wd)

seurat_object[["percent.mt"]] <- PercentageFeatureSet(seurat_object, pattern = "^MT-")
#nFeature_RNA代表每个细胞测到的基因数目，nCount代表每个细胞测到所有基因的表达量之和，percent.mt代表测到的线粒体基因的比例。
VlnPlot(seurat_object, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
ggsave("plot1.pdf", width = 28, height = 25, units = "cm")
seurat_object <- subset(seurat_object, subset = nFeature_RNA > 200 & nFeature_RNA < 2500 & percent.mt < 5)
plot1 <- FeatureScatter(seurat_object, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(seurat_object, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
#LogNormalize 的算法：A = log( 1 + ( UMIA ÷ UMITotal ) × 10000 ) 
seurat_object <- NormalizeData(seurat_object, normalization.method = "LogNormalize", scale.factor = 10000)
seurat_object <- FindVariableFeatures(seurat_object, selection.method = "vst", nfeatures = 2000)
#top10 <- head(VariableFeatures(seurat_object), 10)
#plot3 <- VariableFeaturePlot(seurat_object)
#plot4 <- LabelPoints(plot = plot3, points = top10, repel = TRUE, xnudge=0, ynudge=0)
#pdf(file='Variable_Features_t10_labeled.pdf')
#print(plot4)
#dev.off()
#rm(plot3)
all.genes <- rownames(seurat_object)
seurat_object <- ScaleData(seurat_object, vars.to.regress = "percent.mt") 
seurat_object <- RunPCA(seurat_object, features = VariableFeatures(object = seurat_object)) 
seurat_object <- JackStraw(seurat_object, num.replicate = 100)  ##耗时3min
seurat_object <- ScoreJackStraw(seurat_object, dims = 1:20) 
JackStrawPlot(seurat_object, dims = 1:15)
seurat_object <- FindNeighbors(seurat_object, dims = 1:15)
save(seurat_object,file = 'Tumor_berfore_findcluster-zyy-0929.Rdata')
seurat_object <- FindClusters(seurat_object, resolution = 0.4) 

seurat_object <- RunTSNE(seurat_object, dims = 1:15,check_duplicates = FALSE) 
library(paletteer)  
tsneplot<-TSNEPlot(seurat_object,label = TRUE, pt.size = 0.5,label.size = 7)
print(tsneplot)
dev.off()

seurat_object <- RunUMAP(seurat_object, dims = 1:10, label = T)
umapplot <- DimPlot(seurat_object, reduction = "umap",pt.size = 0.5)
pdf(file = 'umapplot.pdf')
print(umapplot)
dev.off()

swd <- paste(wd,'/T recluster',sep = '')
setwd(swd)
marker_tsne <- list()
for(x in 1:length(list.files(swd))){
  marker <- read.csv(list.files(swd)[x],header=F)
  marker <- marker$V1
  marker_tsneplot <- FeaturePlot(seurat_object, features = marker,pt.size = 0.01,coord.fixed = T,ncol =3)
  marker_tsne[[x]] <- marker_tsneplot
}
pdf(file = 'marker_tsneplot.pdf')
for(x in 1:(length(list.files(swd))-1)){
  print(marker_tsne[[x]])
}
dev.off()

marker_tsneplot <- FeaturePlot(seurat_object, features = 'TIMD4',pt.size = 0.3, label.size = 7, cols = c("lightgrey", "#CC0000"))
marker_tsneplot
marker_tsneplot+ggtitle("Ccr7")+theme(
  plot.title = element_text(color = "black", size = 30,hjust = 0.5),
  axis.title.x = element_text(color="black", size = 20),
  axis.title.y = element_text(color="black", size = 20),legend.text = element_text(size = 20 ),axis.text.x = element_text(size = 20),axis.text.y = element_text(size = 20)
)

marker_tsneplot <- FeaturePlot(seurat_object, features = 'BCL9', pt.size = 1.5, label.size = 7, cols = c("lightgrey", "#800000"))

marker_tsneplot <- FeaturePlot(seurat_object, features = 'APOM', pt.size = 2.0, label.size = 7, cols = c("darkgrey", "#800000"))


seurat_object<- SetIdent(seurat_object,value=seurat_object@meta.data[['Bcl9.status']])

markers <- FindAllMarkers(seurat_object,only.pos = TRUE,min.pct = 0.25,logfc.threshold = 0.25,return.thresh = 0.01)
top10 <- markers%>%group_by(cluster)%>%slice_max(n=10,order_by=avg_log2FC)
write.table(top10,file = 'top10_markergene_cluster.xlsx',sep='\t')


